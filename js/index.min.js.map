{"version":3,"sources":["index.js"],"names":["formR","document","getElementById","email","user","password","checkInputsR","emailValue","value","trim","userValue","passwordValue","setErrorForR","setSuccessForR","input","message","formControl","parentElement","small","querySelector","innerText","className","isEmail","test","toLowerCase","addEventListener","e","preventDefault"],"mappings":"AAyCA,MAAAA,MAAAC,SAAAC,eAAA,eAEAC,MAAAF,SAAAC,eAAA,SACAE,KAAAH,SAAAC,eAAA,QACAG,SAAAJ,SAAAC,eAAA,YAOA,SAAAI,eACA,IAAAC,EAAAJ,MAAAK,MAAAC,OACAC,EAAAN,KAAAI,MAAAC,OACAE,EAAAN,SAAAG,MAAAC,OAEA,KAAAF,EACAK,aAAAT,MAAA,yBAEAU,eAAAV,OAGA,KAAAO,EACAE,aAAAR,KAAA,6BAEAS,eAAAT,MAEA,KAAAO,EACAC,aAAAP,SAAA,4BAEAQ,eAAAR,UAIA,SAAAO,aAAAE,EAAAC,GACA,MAAAC,EAAAF,EAAAG,cACAC,EAAAF,EAAAG,cAAA,UACAD,EAAAE,UAAAL,EAEAC,EAAAK,UAAA,4BAGA,SAAAR,eAAAC,GACA,MAAAE,EAAAF,EAAAG,cAEAD,EAAAK,UAAA,8BAGA,SAAAC,QAAAnB,GACA,MAAA,0JAAAoB,KACApB,EAAAqB,eA5CAxB,MAAAyB,iBAAA,SAAA,IACAC,EAAAC,iBACArB","file":"index.min.js","sourcesContent":["// const form = document.getElementById('form__left');\n//\n// const name = document.getElementById('name');\n// const pass = document.getElementById('pass');\n//\n// form.addEventListener('submit', (e) => {\n//     e.preventDefault();\n//     checkInputs();\n// });\n//\n// function checkInputs() {\n//     const nameValue = name.value.trim();\n//     const passValue = pass.value.trim();\n//\n//     if (nameValue === '') {\n//         setErrorFor(name, 'Username cannot be blank');\n//     } else {\n//         setSuccessFor(name);\n//     }\n//\n//     if (passValue === '') {\n//         setErrorFor(pass, 'Password cannot be blank');\n//     } else {\n//         setSuccessFor(pass);\n//     }\n// }\n//\n// function setErrorFor(input, message) {\n//     const formControl = input.parentElement;\n//     const small = formControl.querySelector('.small');\n//     small.innerText = message;\n//\n//     formControl.className = 'form__control-left error';\n// }\n//\n// function setSuccessFor(input) {\n//     const formControl = input.parentElement;\n//\n//     formControl.className = 'form__control-left success';\n// }\n\nconst formR = document.getElementById('form__right');\n\nconst email = document.getElementById('email');\nconst user = document.getElementById('user');\nconst password = document.getElementById('password');\n\nformR.addEventListener('submit', (e) => {\n    e.preventDefault();\n    checkInputsR();\n});\n\nfunction checkInputsR() {\n    const emailValue = email.value.trim();\n    const userValue = user.value.trim();\n    const passwordValue = password.value.trim();\n\n    if (emailValue === '') {\n        setErrorForR(email, 'Email cannot be blank');\n    } else {\n        setSuccessForR(email);\n    }\n\n    if (userValue === '') {\n        setErrorForR(user, 'User Name cannot be blank');\n    } else {\n        setSuccessForR(user);\n    }\n    if (passwordValue === '') {\n        setErrorForR(password, 'Password cannot be blank');\n    } else {\n        setSuccessForR(password);\n    }\n}\n\nfunction setErrorForR(input, message) {\n    const formControl = input.parentElement;\n    const small = formControl.querySelector('.small');\n    small.innerText = message;\n\n    formControl.className = 'form__control-right error';\n}\n\nfunction setSuccessForR(input) {\n    const formControl = input.parentElement;\n\n    formControl.className = 'form__control-right success';\n}\n\nfunction isEmail(email) {\n    return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n        email.toLowerCase(),\n    );\n}\n"]}